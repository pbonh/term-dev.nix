---
name: Neovim Testing(Devbox)
run-name: ${{ github.actor }} is testing out Neovim w/ Devbox 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: Update System
        run: |
          sudo apt update -y
      - name: Install Prerequisites
        run: |
          sudo apt install build-essential -y
      - name: Bootstrap Environment
        run: |
          ${{ github.workspace }}/scripts/bootstrap_devbox_ci.sh
      - name: Install Treesitter Parsers
        run: |
          eval "$(devbox global shellenv --init-hook)" && NVIM_APPNAME=nvim-lazy-modular nvim --headless "+TSUpdate" +qa
      - name: Install Neovim Plugins
        run: |
          eval "$(devbox global shellenv --init-hook)" && NVIM_APPNAME=nvim-lazy-modular nvim --headless "+Lazy! sync" +qa
      - name: Run Neovim CheckHealth
        run: |
          eval "$(devbox global shellenv --init-hook)" && NVIM_APPNAME=nvim-lazy-modular nvim --headless "+checkhealth" "+w\! health.log" +qa
      - run: echo "💡 healthlog=$(cat health.log)" >> $GITHUB_OUTPUT
      - run: echo ${{ steps.vars.outputs.healthlog }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
