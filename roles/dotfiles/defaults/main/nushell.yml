---
nushell_config_dir: "{{ xdg_config_dir }}/nushell"
nu_devbox_env: |
  $env.PATH = ($env.PATH | split row (char esep) | append '{{ devbox_nix_root_path }}')
nu_homebrew_env: ""
nushell_path_env: |
  $env.PATH = ($env.PATH | split row (char esep) | append '{{ bin_directory }}')
nushell_fzf_env: |
  {% for fzf_env_var in fzf_env -%}
  {{ "$env." + fzf_env[fzf_env_var]['name'] + " = '" + fzf_env[fzf_env_var]['env'] + "'" }}
  {% endfor %}
  $env.SKIM_DEFAULT_COMMAND = '{{ fd_exe }} --type f || git ls-tree -r --name-only HEAD || {{ rg_exe }} --files || find .'
nushell_starship_env: |
  {{ starship_exe }} init nu | save -f {{ nushell_starship_source }}
nushell_aliases: |
  alias mkcd = mkdir $env.1 and cd $env.1
  alias cat = {{ bat_exe }}
  alias ls = {{ lsd_exe }} --group-dirs first
  alias ll = {{ lsd_exe }} --group-dirs first -l
  alias cdg = set dest_dir=`{{ bin_directory }}cdscuts_glob_echo | {{ skim_exe }} --reverse --bind ctrl-f:page-down,ctrl-b:page-up` and cd "$dest_dir"
  alias fcd = set dest_dir=`{{ fd_exe }} --type d | {{ skim_exe }} --reverse --bind ctrl-f:page-down,ctrl-b:page-up` and cd "$dest_dir"
  alias ffe = {{ nvim_exe }} `{{ skim_exe }} --reverse --bind ctrl-f:page-down,ctrl-b:page-up`
  def --env yy [...args] {
    let tmp = (mktemp -t "yazi-cwd.XXXXX")
    {{ yazi_exe }} ...$args --cwd-file $tmp
    let cwd = (open $tmp)
    if $cwd != "" and $cwd != $env.PWD {
      cd $cwd
    }
    rm -fp $tmp
  }
nushell_starship_dir: "{{ xdg_cache_dir }}/starship"
nushell_starship_source: "{{ nushell_starship_dir }}/init.nu"
nushell_starship_config: |
  use {{ nushell_starship_source }}
