---
ai_adapter_avante: "claude"
ai_adapter_chat: "ollama"
ai_adapter_inline: "{{ ai_adapter_chat }}"
ai_adapter_cmd: "{{ ai_adapter_chat }}"
ollama_port: "11434"
ollama_address: "http://localhost:{{ ollama_port }}"
nvim_codecompanion_adapter_config_ollama: |
        ollama = function()
          return require("codecompanion.adapters").extend("ollama", {
            env = {
              url = "{{ ollama_address }}",
            },
          })
        end,
anthropic_api_key: "MY_ANTHROPIC_API_KEY"
openai_api_key: "MY_OPEN_AI_API_KEY"
nvim_codecompanion_adapter_config_openai: |
        openai = function()
          return require("codecompanion.adapters").extend("openai", {
            env = {
              api_key = "{{ openai_api_key }}"
            },
          })
        end,
nvim_codecompanion_adapter_config: |
      adapters = {
        {{ nvim_codecompanion_adapter_config_ollama }}
        {{ nvim_codecompanion_adapter_config_openai }}
      },
nvim_ai_companion:
  lazy: |
    {
      "olimorris/codecompanion.nvim",
      dependencies = {
        "nvim-lua/plenary.nvim",
        "nvim-treesitter/nvim-treesitter",
      },
      config = true
    },
  config: |
    require("codecompanion").setup({
      strategies = {
        chat = {
          adapter = "{{ ai_adapter_chat }}",
        },
        inline = {
          adapter = "{{ ai_adapter_inline }}",
        },
        cmd = {
          adapter = "{{ ai_adapter_cmd }}",
        },
      },
      {{ nvim_codecompanion_adapter_config }}
    })
  keymaps: |
    { '<leader>cc', { n = '<cmd>CodeCompanionChat Toggle<CR>', }, description = 'CodeCompanion: Toggle Chat', },
    { '<leader>ce', { n = '<cmd>lua require("codecompanion").prompt("explain")<CR>', }, description = 'CodeCompanion: Explain', },
nvim_ai_avante:
  lazy: |
    {
      "yetone/avante.nvim",
      event = "VeryLazy",
      lazy = false,
      version = false, -- set this if you want to always pull the latest change
      opts = {
        provider = "{{ ai_adapter_avante }}",
      },
      -- if you want to build from source then do `make BUILD_FROM_SOURCE=true`
      build = "make",
      -- build = "powershell -ExecutionPolicy Bypass -File Build.ps1 -BuildFromSource false" -- for windows
      dependencies = {
        "stevearc/dressing.nvim",
        "nvim-lua/plenary.nvim",
        "MunifTanjim/nui.nvim",
        --- The below dependencies are optional,
        "hrsh7th/nvim-cmp", -- autocompletion for avante commands and mentions
        "nvim-tree/nvim-web-devicons", -- or echasnovski/mini.icons
        "zbirenbaum/copilot.lua", -- for providers='copilot'
        {
          -- Make sure to set this up properly if you have lazy=true
          'MeanderingProgrammer/render-markdown.nvim',
          opts = {
            file_types = { "markdown", "Avante" },
          },
          ft = { "markdown", "Avante" },
        },
      },
    },
  config: ""
  keymaps: |
    { '<leader>cc', { n = '<cmd>AvanteToggle<CR>', }, description = 'Avante: Toggle Chat', },
