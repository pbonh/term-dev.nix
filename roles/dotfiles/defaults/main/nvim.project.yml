---
cd_project_nvim_dir_database_filename: "cd-project.nvim.json"
nvim_project_default:
  packer: |
    use { "LintaoAmons/cd-project.nvim", },
  lazy: |
    -- using lazy.nvim
    {
      "LintaoAmons/cd-project.nvim",
      -- Don't need call the setup function if you think you are good with the default configuration
      config = function()
        require("cd-project").setup({
          -- this json file is acting like a database to update and read the projects in real time.
          -- So because it's just a json file, you can edit directly to add more paths you want manually
          projects_config_filepath = vim.fs.normalize(vim.fn.stdpath("config") .. "/cd-project.nvim.json"),
          -- this controls the behaviour of `CdProjectAdd` command about how to get the project directory
          project_dir_pattern = { ".git", ".gitignore", "Cargo.toml", "package.json", "go.mod" },
          -- do whatever you like by hooks
          hooks = {
            {
              callback = function(dir)
                vim.notify("switched to dir: " .. dir)
              end,
            },
            {
              callback = function(dir)
                vim.notify("switched to dir: " .. dir)
              end, -- required, action when trigger the hook
              name = "cd hint", -- optional
              order = 1, -- optional, the exection order if there're multiple hooks to be trigger at one point
              pattern = "cd-project.nvim", -- optional, trigger hook if contains pattern
              trigger_point = "DISABLE", -- optional, enum of trigger_points, default to `AFTER_CD`
              match_rule = function(dir) -- optional, a function return bool. if have this fields, then pattern will be ignored
                return true
              end,
            },
          },
          projects_picker = "telescope", -- optional, you can switch to `telescope`
        })
      end,
    },
  config: ""
  keymaps: |
    { '<leader>fp', { n = '<cmd>CdProject<CR>', }, description = 'Cd-Project: Cd into Project', },
nvim_project:
  lazy: |
    {
      "LintaoAmons/cd-project.nvim",
      config = function()
        require("cd-project").setup({
          -- this json file is acting like a database to update and read the projects in real time.
          -- So because it's just a json file, you can edit directly to add more paths you want manually
          projects_config_filepath = vim.fs.normalize(vim.fn.stdpath("config") .. "/cd-project.nvim.json"),
          -- this controls the behaviour of `CdProjectAdd` command about how to get the project directory
          project_dir_pattern = { ".git", ".gitignore", "Cargo.toml", "package.json", "go.mod" },
          -- do whatever you like by hooks
          hooks = {
            {
              callback = function(dir)
                vim.notify("switched to dir: " .. dir)
              end,
            },
            {
              callback = function(dir)
                vim.notify("switched to dir: " .. dir)
              end, -- required, action when trigger the hook
              name = "cd hint", -- optional
              order = 1, -- optional, the exection order if there're multiple hooks to be trigger at one point
              pattern = "cd-project.nvim", -- optional, trigger hook if contains pattern
              trigger_point = "DISABLE", -- optional, enum of trigger_points, default to `AFTER_CD`
              match_rule = function(dir) -- optional, a function return bool. if have this fields, then pattern will be ignored
                return true
              end,
            },
          },
          projects_picker = "telescope", -- optional, you can switch to `telescope`
        })
      end,
    },
  config: ""
  keymaps: |
    { '<leader>fp', { n = '<cmd>CdProject<CR>', }, description = 'Cd-Project: Cd into Project', },
