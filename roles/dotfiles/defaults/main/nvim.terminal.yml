---
nvim_toggleterm_shell: "vim.o.shell"
nvim_terminal_default:
  packer: |
    use { 'akinsho/toggleterm.nvim',
      requires = {
        'is0n/fm-nvim',
      },
    }
  lazy: |
    { 'akinsho/toggleterm.nvim',
      dependencies = {
        'is0n/fm-nvim',
        'rolv-apneseth/tfm.nvim',
      },
    },
    {
      "willothy/flatten.nvim",
      config = true,
      lazy = false,
      priority = 1001,
    },
  config: |
    require('toggleterm').setup({
      size = function(term)
        if term.direction == 'horizontal' then
          return 25
        elseif term.direction == 'vertical' then
          return vim.o.columns * 0.4
        end
      end,
      open_mapping = [[<c-s>]],
      direction = 'float',
      close_on_exit = false,
      shell = {{ nvim_toggleterm_shell }},
      float_opts = {
        border = 'shadow',
        width = function()
          return math.floor(vim.o.columns * 0.85)
        end,
        height = function()
          return math.floor(vim.o.lines * 0.85)
        end,
        winblend = 3,
        -- highlights = {
        --    border = 'Normal',
        --    background = 'Normal',
        --  }
      }
    })
    local Terminal  = require('toggleterm.terminal').Terminal
    local justchoose = Terminal:new({
      cmd = '{{ just_exe }} --choose',
      hidden = true,
      start_in_insert = true,
    })
    function just_terminal_runner()
      justchoose:toggle()
    end
    local xplr = Terminal:new({
      cmd = '{{ xplr_exe }}',
      hidden = true,
      start_in_insert = true,
      close_on_exit = true,
    })
    function xplr_terminal_runner()
      xplr:toggle()
    end
    local yazi = Terminal:new({
      cmd = '{{ yazi_exe }}',
      dir = vim.fn.getcwd(),
      hidden = true,
      start_in_insert = true,
      close_on_exit = true,
    })
    function yazi_terminal_runner()
      yazi:toggle()
    end
    local yazi_cwd = Terminal:new({
      cmd = '{{ yazi_exe }}',
      dir = vim.fn.expand('%:p:~:.:h'),
      hidden = true,
      start_in_insert = true,
      close_on_exit = true,
    })
    function yazi_cwd_terminal_runner()
      yazi_cwd:toggle()
    end
  keymaps: |
    -- { '<leader>sj', { n = '<cmd>lua require(\'fm-nvim\').Joshuto(vim.fm.expand(\'%:p:~:.:h\'))<CR>', }, description = 'ToggleTerm: Joshuto(Current File)', },
    -- { '<leader>sJ', { n = '<cmd>lua require(\'fm-nvim\').Joshuto()<CR>', }, description = 'ToggleTerm: Joshuto(Project Root)', },
    -- { '<leader>x', { n = '<cmd>lua require(\'fm-nvim\').Xplr(vim.fn.expand(\'%:p:~:.:h\'))<CR>', }, description = 'ToggleTerm: XPLR(Current File)', },
    -- { '<leader>X', { n = '<cmd>lua require(\'fm-nvim\').Xplr()<CR>', }, description = 'ToggleTerm: XPLR(Project Root)', },
    -- { '<leader>gg', { n = '<cmd>lua gitui_terminal_runner()<CR>', }, description = 'ToggleTerm: GitUI', },
    { '<leader>j', { n = '<cmd>lua just_terminal_runner()<CR>', }, description = 'ToggleTerm: Justfile Chooser', },
    { '<leader>x', { n = '<cmd>lua require("tfm").open()<CR>', }, description = 'FM-Nvim: Yazi(Current File)', },
    { '<leader>X', { n = '<cmd>lua require("tfm").open(vim.fn.getcwd())<CR>', }, description = 'FM-Nvim: Yazi(Project Root)', },
    -- { '<leader>x', { n = '<cmd>lua require("tfm").open(vim.fn.expand("%:p:~:.:h"))<CR>', }, description = 'FM-Nvim: Yazi(Current File)', },
    -- { '<leader>X', { n = '<cmd>lua yazi_terminal_runner()<CR>', }, description = 'ToggleTerm: Yazi(Project Root)', },
    -- { '<leader>x', { n = '<cmd>lua yazi_cwd_terminal_runner()<CR>', }, description = 'ToggleTerm: Yazi(Current File)', },
nvim_terminal:
  lazy: |
    { 'akinsho/toggleterm.nvim',
      dependencies = {
        'is0n/fm-nvim',
      },
      config = function()
        require('toggleterm').setup({
          size = function(term)
            if term.direction == 'horizontal' then
              return 25
            elseif term.direction == 'vertical' then
              return vim.o.columns * 0.4
            end
          end,
          open_mapping = [[<c-s>]],
          direction = 'float',
          close_on_exit = false,
          shell = {{ nvim_toggleterm_shell }},
          float_opts = {
            border = 'shadow',
            width = function()
              return math.floor(vim.o.columns * 0.8)
            end,
            height = function()
              return math.floor(vim.o.lines * 0.8)
            end,
            winblend = 3,
            -- highlights = {
            --    border = 'Normal',
            --    background = 'Normal',
            --  }
          }
        })
        local Terminal  = require('toggleterm.terminal').Terminal
        local justchoose = Terminal:new({
          cmd = '{{ just_exe }} --choose',
          hidden = true,
          start_in_insert = true,
        })
        function just_terminal_runner()
          justchoose:toggle()
        end
      end,
    },
    {
      "rolv-apneseth/tfm.nvim",
      lazy = false,
      opts = {
        file_manager = "yazi",
        replace_netrw = true,
        -- Enable creation of commands
        -- Commands:
        --   Tfm: selected file(s) will be opened in the current window
        --   TfmSplit: selected file(s) will be opened in a horizontal split
        --   TfmVsplit: selected file(s) will be opened in a vertical split
        --   TfmTabedit: selected file(s) will be opened in a new tab page
        enable_cmds = false, 
        -- Custom keybindings only applied within the TFM buffer
        -- Default: {}
        keybindings = {
          ["<ESC>"] = "q"
        },
        -- Customise UI. The below options are the default
        ui = {
          border = "rounded",
          height = 1,
          width = 1,
          x = 0.5,
          y = 0.5,
        },
      },
    },
    {
      "willothy/flatten.nvim",
      config = true,
      lazy = false,
      priority = 1001,
    },
  config: ""
  keymaps: |
    { '<leader>j', { n = '<cmd>lua just_terminal_runner()<CR>', }, description = 'ToggleTerm: Justfile Chooser', },
    { '<leader>x', { n = '<cmd>lua require("tfm").open()<CR>', }, description = 'FM-Nvim: Yazi(Current File)', },
    { '<leader>X', { n = '<cmd>lua require("tfm").open(vim.fn.getcwd())<CR>', }, description = 'FM-Nvim: Yazi(Project Root)', },
