---
nvim_lazy_url: "https://github.com/folke/lazy.nvim.git"
nvim_path_settings:
  - "-- vim.opt.runtimepath:remove(vim.fn.expand('{{ default_nvim_config_dir }}'))"
  - "-- vim.opt.packpath:remove(vim.fn.expand('{{ default_nvim_share_dir }}/site'))"
  - "-- vim.opt.runtimepath:append(vim.fn.expand('{{ nvim_config_dir }}'))"
  - "-- vim.opt.packpath:append(vim.fn.expand('{{ nvim_config_dir }}'))"
  - "-- vim.opt.packpath:append(vim.fn.expand('{{ nvim_share_dir }}/site'))"
nvim_xdg_config_dir: "{{ xdg_config_dir }}"
nvim_xdg_data_dir: "{{ xdg_share_dir }}"
nvim_xdg_cache_dir: "{{ xdg_cache_dir }}"
nvim_config_dir: "{{ xdg_config_dir }}/nvim"
nvim_share_dir: "{{ xdg_share_dir }}/nvim"
nvim_cache_dir: "{{ xdg_cache_dir }}/nvim"
default_nvim_config_dir: "{{ nvim_xdg_config_dir }}/nvim"
default_nvim_share_dir: "{{ nvim_xdg_data_dir }}/nvim"
default_nvim_cache_dir: "{{ nvim_xdg_cache_dir }}/nvim"
packer_url: "https://github.com/wbthomason/packer.nvim" 
nvim_packer_reldir: "site/pack/packer/start/packer.nvim"
nvim_packer_dir: "{{ nvim_share_dir }}/{{ nvim_packer_reldir }}"
nvim_vim_plug_dir: "{{ nvim_share_dir }}/site/autoload"
nvim_plugged_dir: "{{ nvim_share_dir }}/plugged"
nvim_init_lua: "{{ nvim_config_dir }}/init.lua"
nvim_init: "{{ nvim_config_dir }}/init.vim"
nvim_lua_config_dir: "{{ nvim_config_dir }}/lua"
nvim_config_lua: "{{ nvim_lua_config_dir }}/config.lua"
nvim_plugin_config_dir: "{{ nvim_config_dir }}/nvim-config"
nvim_coc_settings_file: "{{ nvim_config_dir }}/coc-settings.json"
nvim_filetype_dir: "{{ nvim_config_dir }}/ftdetect"
nvim_syntax_dir: "{{ nvim_config_dir }}/syntax"
nvim_filetype_settings_dir: "{{ nvim_config_dir }}/ftplugin"
nvim_projects_dir: "{{ nvim_xdg_config_dir }}/nvim/projects"
nvim_shell_cmd: "zsh"
nvim_python_exe: "{{ tool_system_path }}nvim-python3"
nvim_shell: "/bin/{{ nvim_shell_cmd }}"
nvim_make_exe: "{{ make_exe }}"
nvim_fterm_cmds:
  - cmd_name: ManLs
    cmd_str: "man ls"
  - cmd_name: BTop
    cmd_str: "btop"
nvim_nerd_font: "true"
nvim_custom_filetypes: {}
lsp_provider_neovim_plugins: []
language_neovim_plugins: []
ale_plugin_settings: ''
neoformat_plugin_settings: ''
dap_plugin_settings: []
extra_nvim_lua_settings: []
extra_nvim_vimscript_settings: []
extra_plugin_settings: []
extra_lua_plugin_settings: []
extra_nvim_language_mappings: []
lsp_providers: []
lsp_providers_devbox:
  - ansiblels
  - bashls
  - lua_ls
  - yamlls
lsp_providers_luafile: "{{ \"'\" + lsp_providers | join(\"', '\") + \"'\" }}"
lsp_providers_file: "{{ (lsp_providers_luafile != '') | ternary(lsp_providers_luafile, '-- No Additional Servers Preconfigured') }}"
lsp_providers_plugins: []
lsp_providers_setup: []
refactoring_settings: []
telescope_picker_config: ''
nvim_completion_config: []
lsp_provider_file: "{{ '''' + lsp_providers |join(''', ''') + '''' }}"
lsp_provider_plugins_file: "{{ lsp_providers_plugins | join('\n') }}"
lsp_provider_lspconfig_setup_file: "{{ lsp_providers_setup | join('\n') }}"
lsp_provider_neovim_plugins_file: "{{ lsp_provider_neovim_plugins | join('\n') }}"
language_neovim_plugins_file: "{{ language_neovim_plugins | join('\n') }}"
refactoring_settings_file: "{{ refactoring_settings | join('\n') }}"
dap_plugin_settings_file: "{{ dap_plugin_settings | join('\n') }}"
extra_nvim_lua_settings_file: "{{ extra_nvim_lua_settings | join('\n') }}"
extra_plugin_settings_file: "{{ extra_plugin_settings | join('\n') }}"
extra_lua_plugin_settings_file: "{{ extra_lua_plugin_settings | join('\n') }}"
project_paths_startify: "{{ '\"' + project_paths |join('\", \"') + '\"' }}"
lsp_provider_coc_settings: {}
lsp_provider_coc_settings_base:
  diagnostic.displayByAle: true
lsp_provider_coc_settings_languageserver:
  languageserver: "{{ lsp_provider_coc_settings }}"
lsp_provider_coc_settings_merged: "{{ lsp_provider_coc_settings_base | combine(lsp_provider_coc_settings_languageserver) }}"
lsp_provider_coc_settings_json: "{{ lsp_provider_coc_settings_merged | to_nice_json }}"
nvim_test_enable: false
nvim_checkhealth_log:
  - "--headless"
  - "\"+checkhealth\""
  - "\"+w\\!health.log\""
  - "+qa"
nvim_checkhealth_log_cmd: "{{ 'nvim ' + nvim_checkhealth_log | join(' ') }}"
nvim_exe_default: "{{ bin_directory }}nvim"
